class TreeNode:
    def __init__(self, x):
        self.val = x
        self.left = None
        self.right = None

def isValidSequence(root, arr):
    if not root:
        return False
    return dfs(root, arr, 0)

def dfs(node, arr, i):
    if not node:
        return False
    if i == len(arr) - 1:
        return node.val == arr[i] and not node.left and not node.right
    return (node.val == arr[i] and 
            (dfs(node.left, arr, i + 1) or dfs(node.right, arr, i + 1)))

root = TreeNode(0)
root.left = TreeNode(1)
root.right = TreeNode(0)
root.left.left = TreeNode(0)
root.left.right = TreeNode(1)
root.right.left = TreeNode(0)
root.right.right = TreeNode(1)

arr1 = [0, 1, 0, 1]
arr2 = [0, 0, 1]
arr3 = [0, 1, 1]

print(isValidSequence(root, arr1)) 
